plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springBootDependencyManagementVersion}"
    id 'org.openapi.generator' version "${openapiGeneratorVersion}"
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "${sourceCompatibility}"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation 'org.flywaydb:flyway-core'
    testImplementation 'org.projectlombok:lombok:1.18.22'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.0'
    implementation "org.openapitools:jackson-databind-nullable:${jacksonDatabindNullableVersion}"
    implementation "javax.annotation:javax.annotation-api:${javaxAnnotationApiVersion}"
    implementation "com.google.code.findbugs:jsr305:${jsr305Version}"
    implementation 'io.swagger:swagger-annotations:1.6.2'
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBinding}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation "org.testcontainers:testcontainers:${testcontainersVersion}"
}

openApiGenerate {
    generatorName = "java"
    library = "webclient"
    configOptions = [
            serializableModel : "true",
            dateLibrary : "java8",
            serializationLibrary: "jackson"
    ]
    outputDir = "$buildDir/generated-sources/openapi".toString()
    inputSpec = "$rootDir/src/main/resources/petstore-v3.0.2.json".toString()
    apiPackage = "com.example.restapi.infrastructure.petstore.api"
    modelPackage = "com.example.restapi.infrastructure.petstore.model"
}

sourceSets {
    main {
        java.srcDirs += "$buildDir/generated-sources/openapi/src/main/java"
    }
}

compileJava.dependsOn tasks.openApiGenerate

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

